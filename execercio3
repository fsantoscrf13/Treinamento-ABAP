REPORT ZR0018.
*TIPOS
TYPES: BEGIN OF TY_FILE,
  FORNE LIKE ZT0004-FORNE,
  DENOM LIKE ZT0004-DENOM,
  ENDER LIKE ZT0004-ENDER,
  TELEF  LIKE ZT0004-TELEF,
  EMAIL LIKE ZT0004-EMAIL,
  CNPJ  LIKE ZT0004-CNPJ,
  END OF TY_FILE.

* TABELAS INTERNAS
  DATA: T_FILE TYPE STANDARD TABLE OF TY_FILE.
  DATA: T_BDCDATA TYPE STANDARD TABLE OF BDCDATA.

* WORK AREA
  DATA: W_FILE TYPE TY_FILE.
  DATA: W_BDCDATA TYPE BDCDATA.



*TELA DE SELEÇÃO
PARAMETERS P_FILE TYPE LOCALFILE.

AT SELECTION-SCREEN ON VALUE-REQUEST FOR P_FILE.
  PERFORM F_SELECIONA_ARQUIVO.

  START-OF-SELECTION.
  PERFORM F_UPLOAD_FILE.
  PERFORM F_MONTA_BDC.
*&---------------------------------------------------------------------*
*& Form F_SELECIONA_ARQUIVO
*&---------------------------------------------------------------------*
*& text
*&---------------------------------------------------------------------*
*& -->  p1        text
*& <--  p2        text
*&---------------------------------------------------------------------*
FORM f_seleciona_arquivo .

CALL FUNCTION 'KD_GET_FILENAME_ON_F4'
 EXPORTING
*   PROGRAM_NAME        = SYST-REPID
*   DYNPRO_NUMBER       = SYST-DYNNR
   FIELD_NAME          = P_FILE
*   STATIC              = ' '
*   MASK                = ' '
*   FILEOPERATION       = 'R'
*   PATH                =
  CHANGING
    file_name           = P_FILE
*   LOCATION_FLAG       = 'P'
* EXCEPTIONS
*   MASK_TOO_LONG       = 1
*   OTHERS              = 2
          .
IF sy-subrc <> 0.
* Implement suitable error handling here
ENDIF.


ENDFORM.
*&---------------------------------------------------------------------*
*& Form F_UPLOAD_FILE
*&---------------------------------------------------------------------*
*& text
*&---------------------------------------------------------------------*
*& -->  p1        text
*& <--  p2        text
*&---------------------------------------------------------------------*
FORM f_upload_file .
DATA: VL_FILE TYPE STRING.

VL_FILE = P_FILE.

CALL FUNCTION 'GUI_UPLOAD'
  EXPORTING
    filename                      = VL_FILE
   FILETYPE                       = 'ASC'
*   HAS_FIELD_SEPARATOR           = ' '
*   HEADER_LENGTH                 = 0
*   READ_BY_LINE                  = 'X'
*   DAT_MODE                      = ' '
*   CODEPAGE                      = ' '
*   IGNORE_CERR                   = ABAP_TRUE
*   REPLACEMENT                   = '#'
*   CHECK_BOM                     = ' '
*   VIRUS_SCAN_PROFILE            =
*   NO_AUTH_CHECK                 = ' '
* IMPORTING
*   FILELENGTH                    =
*   HEADER                        =
  tables
    data_tab                      = T_FILE
* CHANGING
*   ISSCANPERFORMED               = ' '
 EXCEPTIONS
   FILE_OPEN_ERROR               = 1
   FILE_READ_ERROR               = 2
   NO_BATCH                      = 3
   GUI_REFUSE_FILETRANSFER       = 4
   INVALID_TYPE                  = 5
   NO_AUTHORITY                  = 6
   UNKNOWN_ERROR                 = 7
   BAD_DATA_FORMAT               = 8
   HEADER_NOT_ALLOWED            = 9
   SEPARATOR_NOT_ALLOWED         = 10
   HEADER_TOO_LONG               = 11
   UNKNOWN_DP_ERROR              = 12
   ACCESS_DENIED                 = 13
   DP_OUT_OF_MEMORY              = 14
   DISK_FULL                     = 15
   DP_TIMEOUT                    = 16
   OTHERS                        = 17.

IF sy-subrc <> 0.
* Implement suitable error handling here
ENDIF.


ENDFORM.
*&---------------------------------------------------------------------*
*& Form F_MONTA_BDC
*&---------------------------------------------------------------------*
*& text
*&---------------------------------------------------------------------*
*& -->  p1        text
*& <--  p2        text
*&---------------------------------------------------------------------*
FORM f_monta_bdc .

  PERFORM F_ABRE_PASTA.

  LOOP AT T_FILE INTO W_FILE.

PERFORM F_MONTA_TELA USING 'SAPLZTABELAS' '0004'.
PERFORM F_MONTA_DADOS USING 'BDC_CURSOR' 'ZT0004-DENOM(01)'.
PERFORM F_MONTA_DADOS USING 'BDC_OKCODE' '=NEWL'.

PERFORM F_MONTA_TELA USING 'SAPLZTABELAS' '0005'.
PERFORM F_MONTA_DADOS USING 'BDC_CURSOR' 'ZT0004-CNPJ'.
PERFORM F_MONTA_DADOS USING 'BDC_OKCODE' '=SAVE'.
PERFORM F_MONTA_DADOS USING 'ZT0004-FORNE' W_FILE-FORNE.
PERFORM F_MONTA_DADOS USING 'ZT0004-DENOM' W_FILE-DENOM.
PERFORM F_MONTA_DADOS USING 'ZT0004-ENDER' W_FILE-ENDER.
PERFORM F_MONTA_DADOS USING 'ZT0004-TELEF' W_FILE-TELEF.
PERFORM F_MONTA_DADOS USING 'ZT0004-EMAIL' W_FILE-EMAIL.
PERFORM F_MONTA_DADOS USING 'ZT0004-CNPJ'  W_FILE-CNPJ.

PERFORM F_MONTA_TELA USING 'SAPLZTABELAS' '0005'.
PERFORM F_MONTA_DADOS USING 'BDC_CURSOR' 'ZT0004-DENOM'.
PERFORM F_MONTA_DADOS USING 'BDC_OKCODE' '=ENDE'.

ENDLOOP.


ENDFORM.
*&---------------------------------------------------------------------*
*& Form F_MONTA_TELA
*&---------------------------------------------------------------------*
*& text
*&---------------------------------------------------------------------*
*&      --> P_
*&      --> P_
*&---------------------------------------------------------------------*
FORM f_monta_tela  USING    P_PROGRAM
                            P_SCREEN.

  CLEAR W_BDCDATA.
  W_BDCDATA-PROGRAM = P_PROGRAM.
  W_BDCDATA-DYNPRO  = P_SCREEN.
  W_BDCDATA-DYNBEGIN = 'X'.
  APPEND W_BDCDATA TO T_BDCDATA.


ENDFORM.
*&---------------------------------------------------------------------*
*& Form F_MONTA_DADOS
*&---------------------------------------------------------------------*
*& text
*&---------------------------------------------------------------------*
*&      --> P_
*&      --> P_
*&---------------------------------------------------------------------*
FORM f_monta_dados  USING    P_NAME
                             P_VALUE.
CLEAR W_BDCDATA.
W_BDCDATA-FNAM = P_NAME.
W_BDCDATA-FVAL = P_VALUE.
APPEND W_BDCDATA TO T_BDCDATA.


ENDFORM.
*&---------------------------------------------------------------------*
*& Form F_ABRE_PASTA
*&---------------------------------------------------------------------*
*& text
*&---------------------------------------------------------------------*
*& -->  p1        text
*& <--  p2        text
*&---------------------------------------------------------------------*
FORM f_abre_pasta .

CALL FUNCTION 'BDC_OPEN_GROUP'
 EXPORTING
   CLIENT                    = SY-MANDT
*   DEST                      = FILLER8
   GROUP                     = 'CARGA_FORNEC'
*   HOLDDATE                  = FILLER8
   KEEP                      = 'X'
   USER                      = SY-UNAME
*   RECORD                    = FILLER1
*   PROG                      = SY-CPROG
*   DCPFM                     = '%'
*   DATFM                     = '%'
* IMPORTING
*   QID                       =
 EXCEPTIONS
   CLIENT_INVALID            = 1
   DESTINATION_INVALID       = 2
   GROUP_INVALID             = 3
   GROUP_IS_LOCKED           = 4
   HOLDDATE_INVALID          = 5
   INTERNAL_ERROR            = 6
   QUEUE_ERROR               = 7
   RUNNING                   = 8
   SYSTEM_LOCK_ERROR         = 9
   USER_INVALID              = 10
   OTHERS                    = 11
          .
IF sy-subrc <> 0.
* Implement suitable error handling here
ENDIF.


ENDFORM.
